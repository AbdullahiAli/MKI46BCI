ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
S'C:\\Users\\srw-install\\Desktop\\buffer_bci\\python\\imaginedMovement_psychoPy\\simple_imagined_movement.psyexp'
p7
sS'dataFileName'
p8
VC:\u005cUsers\u005csrw-install\u005cDesktop\u005cbuffer_bci\u005cpython\u005cimaginedMovement_psychoPy\u005cdata\u005c_2016_jan_20_1810
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'simple_imagined_movement'
p12
sS'dataNames'
p13
(lp14
S'key_resp_2.keys'
p15
aS'key_resp_2.rt'
p16
aS'key_resp_3.keys'
p17
aS'key_resp_3.rt'
p18
asS'autoLog'
p19
I01
sS'extraInfo'
p20
(dp21
S'date'
p22
V2016_jan_20_1810
p23
sS'frameRate'
p24
cnumpy.core.multiarray
scalar
p25
(cnumpy
dtype
p26
(S'f8'
I0
I1
tRp27
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xe6\x9b8\xb8|\xf7M@'
tRp28
sS'expName'
p29
g12
sVsession
p30
V001
p31
sVparticipant
p32
V
ssS'loopsUnfinished'
p33
(lp34
sS'saveWideText'
p35
I01
sS'thisEntry'
p36
(dp37
sS'version'
p38
S''
sS'_paramNamesSoFar'
p39
(lp40
S'trailtext'
p41
aS'trail'
p42
aS'bodypart'
p43
aS'instruction'
p44
asS'entries'
p45
(lp46
(dp47
g30
g31
sg16
F0.86796666886857565
sg29
g12
sg32
V
sg22
g23
sg24
g28
sg15
S'space'
p48
sa(dp49
S'stimuli.thisN'
p50
I0
sS'trials.thisIndex'
p51
g25
(g26
(S'i4'
I0
I1
tRp52
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp53
sS'stimuli.thisIndex'
p54
g25
(g52
S'\x03\x00\x00\x00'
tRp55
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p56
I0
sS'trials.thisRepN'
p57
I0
sg44
S'Right Foot'
p58
sg24
g28
sS'trials.thisN'
p59
I0
sg41
S'Trail 1'
p60
sg42
g25
(g26
(S'i8'
I0
I1
tRp61
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp62
sg29
g12
sS'trials.thisTrialN'
p63
I0
sS'stimuli.thisTrialN'
p64
I0
sg22
g23
sg43
S'right_foot'
p65
sa(dp66
S'stimuli.thisN'
p67
I1
sS'trials.thisIndex'
p68
g53
sS'stimuli.thisIndex'
p69
g25
(g52
S'\x01\x00\x00\x00'
tRp70
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p71
I0
sS'trials.thisRepN'
p72
I0
sg44
S'Right Hand'
p73
sg24
g28
sS'trials.thisN'
p74
I0
sg41
g60
sg42
g62
sg29
g12
sS'trials.thisTrialN'
p75
I0
sS'stimuli.thisTrialN'
p76
I1
sg22
g23
sg43
S'right_hand'
p77
sa(dp78
S'stimuli.thisN'
p79
I2
sS'trials.thisIndex'
p80
g53
sS'stimuli.thisIndex'
p81
g25
(g52
S'\x00\x00\x00\x00'
tRp82
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p83
I0
sS'trials.thisRepN'
p84
I0
sg44
S'Left Hand'
p85
sg24
g28
sS'trials.thisN'
p86
I0
sg41
g60
sg42
g62
sg29
g12
sS'trials.thisTrialN'
p87
I0
sS'stimuli.thisTrialN'
p88
I2
sg22
g23
sg43
S'left_hand'
p89
sa(dp90
S'stimuli.thisN'
p91
I3
sS'trials.thisIndex'
p92
g53
sS'stimuli.thisIndex'
p93
g25
(g52
S'\x02\x00\x00\x00'
tRp94
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p95
I0
sS'trials.thisRepN'
p96
I0
sg44
S'Left Foot'
p97
sg24
g28
sS'trials.thisN'
p98
I0
sg41
g60
sg42
g62
sg29
g12
sS'trials.thisTrialN'
p99
I0
sS'stimuli.thisTrialN'
p100
I3
sg22
g23
sg43
S'left_foot'
p101
sa(dp102
g30
g31
sS'trials.thisIndex'
p103
g53
sg32
V
sS'trials.thisRepN'
p104
I0
sg24
g28
sS'trials.thisN'
p105
I0
sg41
g60
sg42
g62
sg29
g12
sS'trials.thisTrialN'
p106
I0
sg22
g23
sa(dp107
S'stimuli.thisN'
p108
I0
sS'trials.thisIndex'
p109
g25
(g52
S'\x01\x00\x00\x00'
tRp110
sS'stimuli.thisIndex'
p111
g25
(g52
S'\x02\x00\x00\x00'
tRp112
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p113
I0
sS'trials.thisRepN'
p114
I0
sS'instruction'
p115
S'Left Foot'
p116
sg24
g28
sS'trials.thisN'
p117
I1
sg41
S'Trail 2'
p118
sg42
g25
(g61
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp119
sg29
g12
sS'trials.thisTrialN'
p120
I1
sS'stimuli.thisTrialN'
p121
I0
sg22
g23
sS'bodypart'
p122
S'left_foot'
p123
sa(dp124
S'stimuli.thisN'
p125
I1
sS'trials.thisIndex'
p126
g110
sS'stimuli.thisIndex'
p127
g25
(g52
S'\x03\x00\x00\x00'
tRp128
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p129
I0
sS'trials.thisRepN'
p130
I0
sg115
S'Right Foot'
p131
sg24
g28
sS'trials.thisN'
p132
I1
sg41
g118
sg42
g119
sg29
g12
sS'trials.thisTrialN'
p133
I1
sS'stimuli.thisTrialN'
p134
I1
sg22
g23
sg122
S'right_foot'
p135
sa(dp136
S'stimuli.thisN'
p137
I2
sS'trials.thisIndex'
p138
g110
sS'stimuli.thisIndex'
p139
g25
(g52
S'\x00\x00\x00\x00'
tRp140
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p141
I0
sS'trials.thisRepN'
p142
I0
sg115
S'Left Hand'
p143
sg24
g28
sS'trials.thisN'
p144
I1
sg41
g118
sg42
g119
sg29
g12
sS'trials.thisTrialN'
p145
I1
sS'stimuli.thisTrialN'
p146
I2
sg22
g23
sg122
S'left_hand'
p147
sa(dp148
S'stimuli.thisN'
p149
I3
sS'trials.thisIndex'
p150
g110
sS'stimuli.thisIndex'
p151
g25
(g52
S'\x01\x00\x00\x00'
tRp152
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p153
I0
sS'trials.thisRepN'
p154
I0
sg115
S'Right Hand'
p155
sg24
g28
sS'trials.thisN'
p156
I1
sg41
g118
sg42
g119
sg29
g12
sS'trials.thisTrialN'
p157
I1
sS'stimuli.thisTrialN'
p158
I3
sg22
g23
sg122
S'right_hand'
p159
sa(dp160
g30
g31
sS'trials.thisIndex'
p161
g110
sg32
V
sS'trials.thisRepN'
p162
I0
sg24
g28
sS'trials.thisN'
p163
I1
sg41
g118
sg42
g119
sg29
g12
sS'trials.thisTrialN'
p164
I1
sg22
g23
sa(dp165
g30
g31
sg29
g12
sg32
V
sg22
g23
sg17
S'space'
p166
sg24
g28
sg18
F1.383418653861554
sa(dp167
g30
g31
sg32
V
sS'trials_2.thisRepN'
p168
I0
sS'trials_2.thisTrialN'
p169
I0
sS'instruction'
p170
S'Right Foot'
p171
sg24
g28
sg29
g12
sS'trials_2.thisIndex'
p172
g25
(g52
S'\x03\x00\x00\x00'
tRp173
sg22
g23
sS'bodypart'
p174
S'right_foot'
p175
sS'trials_2.thisN'
p176
I0
sa(dp177
g30
g31
sg32
V
sS'trials_2.thisRepN'
p178
I0
sS'trials_2.thisTrialN'
p179
I1
sg170
S'Right Hand'
p180
sg24
g28
sg29
g12
sS'trials_2.thisIndex'
p181
g25
(g52
S'\x01\x00\x00\x00'
tRp182
sg22
g23
sg174
S'right_hand'
p183
sS'trials_2.thisN'
p184
I1
sa(dp185
g30
g31
sg32
V
sS'trials_2.thisRepN'
p186
I0
sS'trials_2.thisTrialN'
p187
I2
sg170
S'Left Hand'
p188
sg24
g28
sg29
g12
sS'trials_2.thisIndex'
p189
g25
(g52
S'\x00\x00\x00\x00'
tRp190
sg22
g23
sg174
S'left_hand'
p191
sS'trials_2.thisN'
p192
I2
sa(dp193
g30
g31
sg32
V
sS'trials_2.thisRepN'
p194
I0
sS'trials_2.thisTrialN'
p195
I3
sg170
S'Left Foot'
p196
sg24
g28
sg29
g12
sS'trials_2.thisIndex'
p197
g25
(g52
S'\x02\x00\x00\x00'
tRp198
sg22
g23
sg174
S'left_foot'
p199
sS'trials_2.thisN'
p200
I3
sasS'loops'
p201
(lp202
g1
(cpsychopy.data
TrialHandler
p203
g3
NtRp204
(dp205
S'origin'
p206
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p207
sS'thisTrial'
p208
(lp209
sS'_exp'
p210
I170717584
sg11
S'trials'
p211
sg6
g7
sS'thisRepN'
p212
I1
sg19
I01
sg20
g21
sS'data'
p213
g1
(cpsychopy.data
DataHandler
p214
c__builtin__
dict
p215
(dp216
S'ran'
p217
cnumpy.ma.core
_mareconstruct
p218
(cnumpy.ma.core
MaskedArray
p219
cnumpy
ndarray
p220
(I0
tp221
S'b'
tRp222
(I1
(I2
I1
tg26
(S'f4'
I0
I1
tRp223
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00'
NtbsS'order'
p224
g218
(g219
g220
g221
S'b'
tRp225
(I1
(I2
I1
tg223
I00
S'\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00'
NtbstRp226
(dp227
S'isNumeric'
p228
(dp229
g217
I01
sg224
I01
ssg211
g204
sS'dataTypes'
p230
(lp231
g217
ag224
asS'dataShape'
p232
(lp233
I2
aI1
asbsS'method'
p234
S'sequential'
p235
sS'sequenceIndices'
p236
cnumpy.core.multiarray
_reconstruct
p237
(g220
(I0
tS'b'
tRp238
(I1
(I2
I1
tg52
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00'
tbsS'finished'
p239
I01
sS'nReps'
p240
I1
sS'nRemaining'
p241
I-1
sS'trialList'
p242
(lp243
g1
(cpsychopy.data
TrialType
p244
g215
(dp245
g41
g60
sg42
g62
stRp246
ag1
(g244
g215
(dp247
g41
g118
sg42
g119
stRp248
asS'seed'
p249
NsS'thisIndex'
p250
g110
sS'thisN'
p251
I2
sS'thisTrialN'
p252
I0
sS'nTotal'
p253
I2
sS'_warnUseOfNext'
p254
I01
sbag1
(g203
g3
NtRp255
(dp256
g206
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p257
sg208
(lp258
sg210
I170717584
sg11
S'stimuli'
p259
sg6
g7
sg212
I1
sg19
I01
sg20
g21
sg213
g1
(g214
g215
(dp260
g217
g218
(g219
g220
g221
S'b'
tRp261
(I1
(I4
I1
tg223
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg224
g218
(g219
g220
g221
S'b'
tRp262
(I1
(I4
I1
tg223
I00
S'\x00\x00\x00@\x00\x00\x80?\x00\x00@@\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbstRp263
(dp264
g228
(dp265
g217
I01
sg224
I01
ssg211
g255
sg230
(lp266
g217
ag224
asg232
(lp267
I4
aI1
asbsg234
S'random'
p268
sg236
g237
(g220
(I0
tS'b'
tRp269
(I1
(I4
I1
tg52
I01
S'\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
tbsg239
I01
sg240
I1
sg241
I-1
sg242
(lp270
g1
(g244
g215
(dp271
g43
g89
sg44
g85
stRp272
ag1
(g244
g215
(dp273
g43
g77
sg44
g73
stRp274
ag1
(g244
g215
(dp275
g43
g101
sg44
g97
stRp276
ag1
(g244
g215
(dp277
g43
g65
sg44
g58
stRp278
asg249
Nsg250
g94
sg251
I4
sg252
I0
sg253
I4
sg254
I01
sbag1
(g203
g3
NtRp279
(dp280
g206
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p281
sg208
(lp282
sg210
I170717584
sg11
g259
sg6
g7
sg212
I1
sg19
I01
sg20
g21
sg213
g1
(g214
g215
(dp283
g217
g218
(g219
g220
g221
S'b'
tRp284
(I1
(I4
I1
tg223
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg224
g218
(g219
g220
g221
S'b'
tRp285
(I1
(I4
I1
tg223
I00
S'\x00\x00\x00@\x00\x00@@\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00'
NtbstRp286
(dp287
g228
(dp288
g217
I01
sg224
I01
ssg211
g279
sg230
(lp289
g217
ag224
asg232
(lp290
I4
aI1
asbsg234
g268
sg236
g237
(g220
(I0
tS'b'
tRp291
(I1
(I4
I1
tg52
I01
S'\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
tbsg239
I01
sg240
I1
sg241
I-1
sg242
(lp292
g1
(g244
g215
(dp293
g122
g147
sg115
g143
stRp294
ag1
(g244
g215
(dp295
g122
g159
sg115
g155
stRp296
ag1
(g244
g215
(dp297
g122
g123
sg115
g116
stRp298
ag1
(g244
g215
(dp299
g122
g135
sg115
g131
stRp300
asg249
Nsg250
g152
sg251
I4
sg252
I0
sg253
I4
sg254
I01
sbag1
(g203
g3
NtRp301
(dp302
g206
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p303
sg208
(lp304
sg210
I170717584
sg11
S'trials_2'
p305
sg6
g7
sg212
I1
sg19
I01
sg20
g21
sg213
g1
(g214
g215
(dp306
g217
g218
(g219
g220
g221
S'b'
tRp307
(I1
(I4
I1
tg223
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg224
g218
(g219
g220
g221
S'b'
tRp308
(I1
(I4
I1
tg223
I00
S'\x00\x00\x00@\x00\x00\x80?\x00\x00@@\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbstRp309
(dp310
g228
(dp311
g217
I01
sg224
I01
ssg211
g301
sg230
(lp312
g217
ag224
asg232
(lp313
I4
aI1
asbsg234
g268
sg236
g237
(g220
(I0
tS'b'
tRp314
(I1
(I4
I1
tg52
I01
S'\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
tbsg239
I01
sg240
I1
sg241
I-1
sg242
(lp315
g1
(g244
g215
(dp316
g174
g191
sg170
g188
stRp317
ag1
(g244
g215
(dp318
g174
g183
sg170
g180
stRp319
ag1
(g244
g215
(dp320
g174
g199
sg170
g196
stRp321
ag1
(g244
g215
(dp322
g174
g175
sg170
g171
stRp323
asg249
Nsg250
g198
sg251
I4
sg252
I0
sg253
I4
sg254
I01
sbasS'savePickle'
p324
I00
sb.
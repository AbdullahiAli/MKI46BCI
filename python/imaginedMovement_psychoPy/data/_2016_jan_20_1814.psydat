ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
S'C:\\Users\\srw-install\\Desktop\\buffer_bci\\python\\imaginedMovement_psychoPy\\simple_imagined_movement.psyexp'
p7
sS'dataFileName'
p8
VC:\u005cUsers\u005csrw-install\u005cDesktop\u005cbuffer_bci\u005cpython\u005cimaginedMovement_psychoPy\u005cdata\u005c_2016_jan_20_1814
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'simple_imagined_movement'
p12
sS'dataNames'
p13
(lp14
S'key_resp_2.keys'
p15
aS'key_resp_2.rt'
p16
aS'key_resp_3.keys'
p17
aS'key_resp_3.rt'
p18
asS'autoLog'
p19
I01
sS'extraInfo'
p20
(dp21
S'date'
p22
V2016_jan_20_1814
p23
sS'frameRate'
p24
cnumpy.core.multiarray
scalar
p25
(cnumpy
dtype
p26
(S'f8'
I0
I1
tRp27
(I3
S'<'
NNNI-1
I-1
I0
tbS'"\xb0&\xc7W N@'
tRp28
sS'expName'
p29
g12
sVsession
p30
V001
p31
sVparticipant
p32
V
ssS'loopsUnfinished'
p33
(lp34
g1
(cpsychopy.data
TrialHandler
p35
g3
NtRp36
(dp37
S'origin'
p38
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p39
sS'thisTrial'
p40
g1
(cpsychopy.data
TrialType
p41
c__builtin__
dict
p42
(dp43
S'bodypart'
p44
S'left_foot'
p45
sS'instruction'
p46
S'Left Foot'
p47
stRp48
sS'_exp'
p49
I170709392
sg11
S'trials_2'
p50
sg6
g7
sS'thisRepN'
p51
I0
sg19
I01
sg20
g21
sS'data'
p52
g1
(cpsychopy.data
DataHandler
p53
g42
(dp54
S'ran'
p55
cnumpy.ma.core
_mareconstruct
p56
(cnumpy.ma.core
MaskedArray
p57
cnumpy
ndarray
p58
(I0
tp59
S'b'
tRp60
(I1
(I4
I1
tg26
(S'f4'
I0
I1
tRp61
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00'
NtbsS'order'
p62
g56
(g57
g58
g59
S'b'
tRp63
(I1
(I4
I1
tg61
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x01\x00\x01'
NtbstRp64
(dp65
S'isNumeric'
p66
(dp67
g55
I01
sg62
I01
ssS'trials'
p68
g36
sS'dataTypes'
p69
(lp70
g55
ag62
asS'dataShape'
p71
(lp72
I4
aI1
asbsS'method'
p73
S'random'
p74
sS'sequenceIndices'
p75
cnumpy.core.multiarray
_reconstruct
p76
(g58
(I0
tS'b'
tRp77
(I1
(I4
I1
tg26
(S'i4'
I0
I1
tRp78
(I3
S'<'
NNNI-1
I-1
I0
tbI01
S'\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00'
tbsS'finished'
p79
I00
sS'nReps'
p80
I1
sS'nRemaining'
p81
I2
sS'trialList'
p82
(lp83
g1
(g41
g42
(dp84
g44
S'left_hand'
p85
sg46
S'Left Hand'
p86
stRp87
ag1
(g41
g42
(dp88
g44
S'right_hand'
p89
sg46
S'Right Hand'
p90
stRp91
ag48
ag1
(g41
g42
(dp92
g44
S'right_foot'
p93
sg46
S'Right Foot'
p94
stRp95
asS'seed'
p96
NsS'thisIndex'
p97
g25
(g78
S'\x02\x00\x00\x00'
tRp98
sS'thisN'
p99
I1
sS'thisTrialN'
p100
I1
sS'nTotal'
p101
I4
sS'_warnUseOfNext'
p102
I01
sbasS'saveWideText'
p103
I01
sS'thisEntry'
p104
(dp105
sS'version'
p106
S''
sS'_paramNamesSoFar'
p107
(lp108
S'trailtext'
p109
aS'trail'
p110
aS'bodypart'
p111
aS'instruction'
p112
asS'entries'
p113
(lp114
(dp115
g30
g31
sg16
F64.992391388709621
sg29
g12
sg32
V
sg22
g23
sg24
g28
sg15
S'space'
p116
sa(dp117
S'stimuli.thisN'
p118
I0
sS'trials.thisIndex'
p119
g25
(g78
S'\x00\x00\x00\x00'
tRp120
sS'stimuli.thisIndex'
p121
g25
(g78
S'\x00\x00\x00\x00'
tRp122
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p123
I0
sS'trials.thisRepN'
p124
I0
sg112
S'Left Hand'
p125
sg24
g28
sS'trials.thisN'
p126
I0
sg109
S'Trail 1'
p127
sg110
g25
(g26
(S'i8'
I0
I1
tRp128
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp129
sg29
g12
sS'trials.thisTrialN'
p130
I0
sS'stimuli.thisTrialN'
p131
I0
sg22
g23
sg111
S'left_hand'
p132
sa(dp133
S'stimuli.thisN'
p134
I1
sS'trials.thisIndex'
p135
g120
sS'stimuli.thisIndex'
p136
g25
(g78
S'\x02\x00\x00\x00'
tRp137
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p138
I0
sS'trials.thisRepN'
p139
I0
sg112
S'Left Foot'
p140
sg24
g28
sS'trials.thisN'
p141
I0
sg109
g127
sg110
g129
sg29
g12
sS'trials.thisTrialN'
p142
I0
sS'stimuli.thisTrialN'
p143
I1
sg22
g23
sg111
S'left_foot'
p144
sa(dp145
S'stimuli.thisN'
p146
I2
sS'trials.thisIndex'
p147
g120
sS'stimuli.thisIndex'
p148
g25
(g78
S'\x03\x00\x00\x00'
tRp149
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p150
I0
sS'trials.thisRepN'
p151
I0
sg112
S'Right Foot'
p152
sg24
g28
sS'trials.thisN'
p153
I0
sg109
g127
sg110
g129
sg29
g12
sS'trials.thisTrialN'
p154
I0
sS'stimuli.thisTrialN'
p155
I2
sg22
g23
sg111
S'right_foot'
p156
sa(dp157
S'stimuli.thisN'
p158
I3
sS'trials.thisIndex'
p159
g120
sS'stimuli.thisIndex'
p160
g25
(g78
S'\x01\x00\x00\x00'
tRp161
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p162
I0
sS'trials.thisRepN'
p163
I0
sg112
S'Right Hand'
p164
sg24
g28
sS'trials.thisN'
p165
I0
sg109
g127
sg110
g129
sg29
g12
sS'trials.thisTrialN'
p166
I0
sS'stimuli.thisTrialN'
p167
I3
sg22
g23
sg111
S'right_hand'
p168
sa(dp169
g30
g31
sS'trials.thisIndex'
p170
g120
sg32
V
sS'trials.thisRepN'
p171
I0
sg24
g28
sS'trials.thisN'
p172
I0
sg109
g127
sg110
g129
sg29
g12
sS'trials.thisTrialN'
p173
I0
sg22
g23
sa(dp174
S'stimuli.thisN'
p175
I0
sS'trials.thisIndex'
p176
g25
(g78
S'\x01\x00\x00\x00'
tRp177
sS'stimuli.thisIndex'
p178
g25
(g78
S'\x00\x00\x00\x00'
tRp179
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p180
I0
sS'trials.thisRepN'
p181
I0
sS'instruction'
p182
S'Left Hand'
p183
sg24
g28
sS'trials.thisN'
p184
I1
sg109
S'Trail 2'
p185
sg110
g25
(g128
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp186
sg29
g12
sS'trials.thisTrialN'
p187
I1
sS'stimuli.thisTrialN'
p188
I0
sg22
g23
sS'bodypart'
p189
S'left_hand'
p190
sa(dp191
S'stimuli.thisN'
p192
I1
sS'trials.thisIndex'
p193
g177
sS'stimuli.thisIndex'
p194
g25
(g78
S'\x03\x00\x00\x00'
tRp195
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p196
I0
sS'trials.thisRepN'
p197
I0
sg182
S'Right Foot'
p198
sg24
g28
sS'trials.thisN'
p199
I1
sg109
g185
sg110
g186
sg29
g12
sS'trials.thisTrialN'
p200
I1
sS'stimuli.thisTrialN'
p201
I1
sg22
g23
sg189
S'right_foot'
p202
sa(dp203
S'stimuli.thisN'
p204
I2
sS'trials.thisIndex'
p205
g177
sS'stimuli.thisIndex'
p206
g25
(g78
S'\x01\x00\x00\x00'
tRp207
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p208
I0
sS'trials.thisRepN'
p209
I0
sg182
S'Right Hand'
p210
sg24
g28
sS'trials.thisN'
p211
I1
sg109
g185
sg110
g186
sg29
g12
sS'trials.thisTrialN'
p212
I1
sS'stimuli.thisTrialN'
p213
I2
sg22
g23
sg189
S'right_hand'
p214
sa(dp215
S'stimuli.thisN'
p216
I3
sS'trials.thisIndex'
p217
g177
sS'stimuli.thisIndex'
p218
g25
(g78
S'\x02\x00\x00\x00'
tRp219
sg32
V
sg30
g31
sS'stimuli.thisRepN'
p220
I0
sS'trials.thisRepN'
p221
I0
sg182
S'Left Foot'
p222
sg24
g28
sS'trials.thisN'
p223
I1
sg109
g185
sg110
g186
sg29
g12
sS'trials.thisTrialN'
p224
I1
sS'stimuli.thisTrialN'
p225
I3
sg22
g23
sg189
S'left_foot'
p226
sa(dp227
g30
g31
sS'trials.thisIndex'
p228
g177
sg32
V
sS'trials.thisRepN'
p229
I0
sg24
g28
sS'trials.thisN'
p230
I1
sg109
g185
sg110
g186
sg29
g12
sS'trials.thisTrialN'
p231
I1
sg22
g23
sa(dp232
g30
g31
sg29
g12
sg32
V
sg22
g23
sg17
S'space'
p233
sg24
g28
sg18
F4.8836428327222166
sa(dp234
g30
g31
sg32
V
sS'trials_2.thisRepN'
p235
I0
sS'trials_2.thisTrialN'
p236
I0
sg46
g86
sg24
g28
sg29
g12
sS'trials_2.thisIndex'
p237
g25
(g78
S'\x00\x00\x00\x00'
tRp238
sg22
g23
sg44
g85
sS'trials_2.thisN'
p239
I0
sasS'loops'
p240
(lp241
g1
(g35
g3
NtRp242
(dp243
g38
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p244
sg40
(lp245
sg49
I170709392
sg11
g68
sg6
g7
sg51
I1
sg19
I01
sg20
g21
sg52
g1
(g53
g42
(dp246
g55
g56
(g57
g58
g59
S'b'
tRp247
(I1
(I2
I1
tg61
I00
S'\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00'
Ntbsg62
g56
(g57
g58
g59
S'b'
tRp248
(I1
(I2
I1
tg61
I00
S'\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00'
NtbstRp249
(dp250
g66
(dp251
g55
I01
sg62
I01
ssg68
g242
sg69
(lp252
g55
ag62
asg71
(lp253
I2
aI1
asbsg73
S'sequential'
p254
sg75
g76
(g58
(I0
tS'b'
tRp255
(I1
(I2
I1
tg78
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00'
tbsg79
I01
sg80
I1
sg81
I-1
sg82
(lp256
g1
(g41
g42
(dp257
g109
g127
sg110
g129
stRp258
ag1
(g41
g42
(dp259
g109
g185
sg110
g186
stRp260
asg96
Nsg97
g177
sg99
I2
sg100
I0
sg101
I2
sg102
I01
sbag1
(g35
g3
NtRp261
(dp262
g38
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p263
sg40
(lp264
sg49
I170709392
sg11
S'stimuli'
p265
sg6
g7
sg51
I1
sg19
I01
sg20
g21
sg52
g1
(g53
g42
(dp266
g55
g56
(g57
g58
g59
S'b'
tRp267
(I1
(I4
I1
tg61
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg62
g56
(g57
g58
g59
S'b'
tRp268
(I1
(I4
I1
tg61
I00
S'\x00\x00\x00\x00\x00\x00@@\x00\x00\x80?\x00\x00\x00@'
S'\x00\x00\x00\x00'
NtbstRp269
(dp270
g66
(dp271
g55
I01
sg62
I01
ssg68
g261
sg69
(lp272
g55
ag62
asg71
(lp273
I4
aI1
asbsg73
g74
sg75
g76
(g58
(I0
tS'b'
tRp274
(I1
(I4
I1
tg78
I01
S'\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00'
tbsg79
I01
sg80
I1
sg81
I-1
sg82
(lp275
g1
(g41
g42
(dp276
g111
g132
sg112
g125
stRp277
ag1
(g41
g42
(dp278
g111
g168
sg112
g164
stRp279
ag1
(g41
g42
(dp280
g111
g144
sg112
g140
stRp281
ag1
(g41
g42
(dp282
g111
g156
sg112
g152
stRp283
asg96
Nsg97
g161
sg99
I4
sg100
I0
sg101
I4
sg102
I01
sbag1
(g35
g3
NtRp284
(dp285
g38
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="True" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="u'data' + os.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[0,0,0]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1024, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'session': u'001', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="simple_imagined_movement" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="pause">\u000a      <TextComponent name="text_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Pause" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <CodeComponent name="receiveEvent">\u000a        <Param name="Begin Experiment" val="getFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="receiveEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="feedbackEvt = waitnewevents(&quot;feedback&quot;,10000)&#10;if feedbackEvt is None:&#10;    feedbackTxt='None'&#10;else:&#10;    feedback=str(feedbackEvt.value)&#10;getFeedbackCounter = getFeedbackCounter + 1 " valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="text_5">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_5" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="&quot;Feedback = &quot; + $feedbackTxt" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="stimulus">\u000a      <StaticComponent name="ISI_2">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction_2">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction_2" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_2">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_2" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;stimulus&quot;, str(bodypart))" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="feedbackInstructions">\u000a      <TextComponent name="text_4">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_4" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Feedback Phase" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_3">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_3" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="trailStart">\u000a      <TextComponent name="text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$trailtext&#10;" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="2" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;trailStart&quot;, trail)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="stimulusFeedback">\u000a      <StaticComponent name="ISI">\u000a        <Param name="code" val="" valType="code" updates="None"/>\u000a        <Param name="name" val="ISI" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="0.5" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a      </StaticComponent>\u000a      <TextComponent name="imagination_instruction">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="imagination_instruction" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instruction" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="4" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <CodeComponent name="sendEvent_3">\u000a        <Param name="Begin Experiment" val="sendFeedbackCounter = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="sendEvent_3" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="sendEvent(&quot;feedbackStimulus&quot; + str(sendFeedbackCounter), &quot;&quot;)&#10;sendFeedbackCounter = 0 + sendFeedbackCounter" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="Instructions">\u000a      <TextComponent name="text_3">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="text_3" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="80" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Simple Imagined Movement Experiment&#10;&#10;During the trails imagine yourself vigerously shaking the indicated body part (left hand, right hand, left foot or right foot).&#10;&#10;Press &lt;space&gt; to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3600" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="key_resp_2">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="key_resp_2" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'y','n','left','right','space'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="store" val="last key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <CodeComponent name="connectToBuffer">\u000a        <Param name="Begin Experiment" val="# buffer_bci Handling the requered imports&#10;import sys&#10;import time&#10;sys.path.append(&quot;../../dataAcq/buffer/python/&quot;)&#10;from FieldTrip import Client, Event&#10;from time import sleep&#10;&#10;# buffer_bci Connecting to the buffer.&#10;host = 'localhost'&#10;port = 1972&#10;ftc = Client()&#10;hdr = None;&#10;while hdr is None :&#10;    print 'Trying to connect to buffer on %s:%i ...'%(host,port)&#10;    try:&#10;        ftc.connect(host, port)&#10;        print '\u005cnConnected - trying to read header...'&#10;        hdr = ftc.getHeader()&#10;    except IOError:&#10;        pass&#10;    if hdr is None:&#10;        print 'Invalid Header... waiting'&#10;        time.sleep(1)&#10;    else:&#10;        print hdr&#10;        print hdr.labels&#10;# buffer_bci Defining a usefull helper functions&#10;&#10;def sendEvent(eventType, eventValue):&#10;    e = Event()&#10;    e.type = eventType&#10;    e.value = eventValue&#10;    ftc.putEvents(e)&#10;    &#10;&#10;def buffer_newevents(evttype=None,timeout_ms=500,verbose=False):&#10;    '''&#10;    Wait for and return any new events recieved from the buffer between&#10;    calls to this function&#10;    &#10;    timeout    = maximum time to wait in milliseconds before returning&#10;    '''&#10;    global ftc,nEvents # use to store number events processed accross function calls&#10;    if not 'nEvents' in globals(): # first time initialize to events up to now&#10;        start, nEvents = ftc.poll()&#10;&#10;    if verbose:&#10;        print(&quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms))&#10;&#10;    start = time.time()&#10;    elapsed_ms = 0&#10;    events=[]&#10;    while len(events)==0 and elapsed_ms&lt;timeout_ms:&#10;        nSamples,curEvents=ftc.wait(-1,nEvents, int(timeout_ms - elapsed_ms))&#10;        if curEvents&gt;nEvents:&#10;            if nEvents&lt;curEvents-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                nEvents = curEvents-50&#10;            events = ftc.getEvents([nEvents,curEvents-1])            &#10;            if not evttype is None:&#10;                events = filter(lambda x: x.type in evttype, events)&#10;        nEvents = curEvents # update starting number events (allow for buffer restarts)&#10;        elapsed_ms = (time.time() - start)*1000        &#10;    return events&#10;&#10;procnEvents=-1&#10;def waitnewevents(evtypes, timeout_ms=1000,verbose = True):      &#10;    &quot;&quot;&quot;Function that blocks until a certain type of event is recieved. &#10;    evttypes is a list of event type strings, recieving any of these event types termintes the block.  &#10;    All such matching events are returned&#10;    &quot;&quot;&quot;    &#10;    global ftc, nEvents, nSamples, procnEvents&#10;    start = time.time()&#10;    update()&#10;    if procnEvents&lt;=0:&#10;         procnEvents=nEvents&#10;    elapsed_ms = 0&#10;    &#10;    if verbose:&#10;        print &quot;Waiting for event(s) &quot; + str(evtypes) + &quot; with timeout_ms &quot; + str(timeout_ms)&#10;    &#10;    evt=None&#10;    while elapsed_ms &lt; timeout_ms and evt is None:&#10;        nSamples, nEvents2 = ftc.wait(-1,procnEvents, timeout_ms - elapsed_ms)     &#10;&#10;        if nEvents2 &gt; nEvents : # new events to process&#10;            procnEvents = nEvents2&#10;            if procnEvents&lt;nEvents2-50:&#10;                print(&quot;Warning: long delay means missed events&quot;)&#10;                procnEvents = nEvents2-50&#10;            evts = ftc.getEvents((procnEvents, nEvents2 -1))&#10;            evts = filter(lambda x: x.type in evtype, evts)&#10;            if len(evts) &gt; 0 :&#10;                evt=evts&#10;        &#10;        elapsed_ms = (time.time() - start)*1000&#10;        nEvents = nEvents2            &#10;    return evt" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="connectToBuffer" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <Routine name="Instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="trails.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'trailtext': u' Trail 1', 'trail': 1}, {'trailtext': u' Trail 2', 'trail': 2}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trailStart"/>\u000a    <LoopInitiator loopType="TrialHandler" name="stimuli">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="stimuli" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodypart': u'left_hand', 'instruction': u' Left Hand'}, {'bodypart': u'right_hand', 'instruction': u' Right Hand'}, {'bodypart': u'left_foot', 'instruction': u' Left Foot'}, {'bodypart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulus"/>\u000a    <LoopTerminator name="stimuli"/>\u000a    <Routine name="pause"/>\u000a    <LoopTerminator name="trials"/>\u000a    <Routine name="feedbackInstructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_2">\u000a      <Param name="conditionsFile" val="stimulus_conditions.csv" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_2" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{'bodyPart': u'left_hand', 'instruction': u' Left Hand'}, {'bodyPart': u'right_hand', 'instruction': u' Right Hand'}, {'bodyPart': u'left_foot', 'instruction': u' Left Foot'}, {'bodyPart': u'right_foot', 'instruction': u' Right Foot'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="code" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="stimulusFeedback"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_2"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p286
sg40
(lp287
sg49
I170709392
sg11
g265
sg6
g7
sg51
I1
sg19
I01
sg20
g21
sg52
g1
(g53
g42
(dp288
g55
g56
(g57
g58
g59
S'b'
tRp289
(I1
(I4
I1
tg61
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00'
Ntbsg62
g56
(g57
g58
g59
S'b'
tRp290
(I1
(I4
I1
tg61
I00
S'\x00\x00\x00\x00\x00\x00\x00@\x00\x00@@\x00\x00\x80?'
S'\x00\x00\x00\x00'
NtbstRp291
(dp292
g66
(dp293
g55
I01
sg62
I01
ssg68
g284
sg69
(lp294
g55
ag62
asg71
(lp295
I4
aI1
asbsg73
g74
sg75
g76
(g58
(I0
tS'b'
tRp296
(I1
(I4
I1
tg78
I01
S'\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
tbsg79
I01
sg80
I1
sg81
I-1
sg82
(lp297
g1
(g41
g42
(dp298
g189
g190
sg182
g183
stRp299
ag1
(g41
g42
(dp300
g189
g214
sg182
g210
stRp301
ag1
(g41
g42
(dp302
g189
g226
sg182
g222
stRp303
ag1
(g41
g42
(dp304
g189
g202
sg182
g198
stRp305
asg96
Nsg97
g219
sg99
I4
sg100
I0
sg101
I4
sg102
I01
sbag36
asS'savePickle'
p306
I00
sb.